{"version":3,"sources":["./src/app/deck/components/active-deck/active-deck.component.ts","./src/app/deck/components/active-deck/active-deck.component.html","./src/app/deck/deck-routing.module.ts","./src/app/deck/deck.component.ts","./src/app/deck/deck.component.html","./src/app/deck/deck.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;ICOzE,yEAEF;IADI,uUAAc,8BAAoB,IAAC;IADrC,4DAEF;;;IAFsC,oKAA2C;;;;IAU/E,yEAEF;IADI,wUAAc,8BAAoB,IAAC;IADrC,4DAEF;;;IAFuC,oKAA2C;;;;IAUhF,yEAEF;IADI,0UAAc,+BAAoB,IAAC;IADrC,4DAEF;;;IAFsC,oKAA2C;;ADnB9E,MAAM,mBAAmB;IAI9B;QAFU,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;IAE1B,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,gBAAgB,CAAC,KAAoB;QACnC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACtE,MAAM,CAAC;QACV,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAC3B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CACrE,CAAC,MAAM,CAAC;QACT,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;QAC1E,OAAO,GAAG,KAAK,CAAC,MAAM,gBAAgB,WAAW,YAAY,QAAQ,gBAAgB,OAAO,IAAI,CAAC;IACnG,CAAC;IAED,iBAAiB,CAAC,KAAoB;QACpC,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACnE,MAAM,CAAC;QACV,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CACzB,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CACnE,CAAC,MAAM,CAAC;QACT,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACrE,MAAM,CAAC;QACV,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;QAC1E,OAAO,GAAG,KAAK,CAAC,MAAM,aAAa,SAAS,UAAU,MAAM,aAAa,UAAU,WAAW,OAAO,IAAI,CAAC;IAC5G,CAAC;;sFA5BU,mBAAmB;mGAAnB,mBAAmB;QCRhC,yEACE;QAAA,6EACE;QAAA,yEACE;QAAA,uEAAM;QAAA,+DAAI;QAAA,4DAAO;QACjB,uEAAM;QAAA,uDAAiC;QAAA,4DAAO;QAChD,4DAAM;QACN,yEACE;QAAA,+GAEF;QAAA,4DAAM;QACR,4DAAU;QACV,6EACE;QAAA,0EACE;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,wEAAM;QAAA,wDAAmC;QAAA,4DAAO;QAClD,4DAAM;QACN,0EACE;QAAA,iHAEF;QAAA,4DAAM;QACR,4DAAU;QACV,8EACE;QAAA,0EACE;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,wEAAM;QAAA,wDAAiC;QAAA,4DAAO;QAChD,4DAAM;QACN,0EACE;QAAA,iHAEF;QAAA,4DAAM;QACR,4DAAU;QACZ,4DAAM;;QA3BM,0DAAiC;QAAjC,oGAAiC;QAGlC,0DAA8B;QAA9B,kFAA8B;QAO7B,0DAAmC;QAAnC,sGAAmC;QAGpC,0DAA+B;QAA/B,mFAA+B;QAO9B,0DAAiC;QAAjC,oGAAiC;QAGlC,0DAA8B;QAA9B,kFAA8B;;6FDnB5B,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;sCAEU,IAAI;kBAAZ,mDAAK;YACI,SAAS;kBAAlB,oDAAM;;;;;;;;;;;;;;AEVT;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACN;;;AAEjD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6DAAa,EAAE,CAAC,CAAC;AAMzD,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;;;;ICQvE,2EACE;IAAA,4EACA;IAD2D,+VAA8B;IAAzF,4DACA;IAAA,uDACF;IAAA,4DAAQ;;;IAH0B,wFAAqB;IACf,0DAAoB;IAApB,uFAAoB;IAC1D,0DACF;IADE,wFACF;;;;IAKA,sFACkB;IAD4C,8VAAkC;IAChG,4DAAkB;;;IAD+E,mFAAmB;;;;IAEpH,sFAC0D;IADK,+VAAkC;IACzD,4DAAkB;;ADTrD,MAAM,aAAa;IAQxB,YACU,iBAAoC,EACpC,WAAwB;QADxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QARlC,gBAAW,GAAY,KAAK,CAAC;QAC7B,UAAK,GAAW,EAAE,CAAC;QAEnB,gBAAW,GAAW,EAAE,CAAC;IAMtB,CAAC;IAEJ,QAAQ;QACN,MAAM,IAAI,GAAG;YACX,uBAAuB;YACveAAe,EAAE,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG;YACjB,EAAE,EAAE,QAAQ;YACZ,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,gBAAgB;YACtB,IAAI,EACF,qhBAAqhB;YACvhB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,aAAa;YACnB,SAAS,EAAE,MAAM;YACjB,OAAO,EAAE,kBAAkB;YAC3B,SAAS,EAAE,eAAe;YAC1B,SAAS,EAAE;gBACT;oBACE,QAAQ,EAAE,kCAAkC;oBAC5C,QAAQ,EAAE,YAAY;oBACtB,UAAU,EAAE,YAAY;oBACxB,eAAe,EAAE,MAAM;oBACvB,SAAS,EAAE,OAAO;iBACnB;aACF;YACD,WAAW,EAAE;gBACX;oBACE,EAAE,EAAE,QAAQ;oBACZ,SAAS,EACP,iEAAiE;oBACnE,eAAe,EACb,uEAAuE;iBAC1E;gBACD;oBACE,EAAE,EAAE,QAAQ;oBACZ,SAAS,EACP,iEAAiE;oBACnE,eAAe,EACb,uEAAuE;iBAC1E;gBACD;oBACE,EAAE,EAAE,QAAQ;oBACZ,SAAS,EACP,iEAAiE;oBACnE,eAAe,EACb,uEAAuE;iBAC1E;gBACD;oBACE,EAAE,EAAE,QAAQ;oBACZ,SAAS,EACP,iEAAiE;oBACnE,eAAe,EACb,uEAAuE;iBAC1E;gBACD;oBACE,EAAE,EAAE,QAAQ;oBACZ,SAAS,EACP,iEAAiE;oBACnE,eAAe,EACb,uEAAuE;iBAC1E;aACF;YACD,WAAW,EAAE;gBACX;oBACE,gBAAgB,EAAE,OAAO;oBACzB,eAAe,EAAE,OAAO;oBACxB,UAAU,EAAE,OAAO;oBACnB,YAAY,EAAE,QAAQ;oBACtB,kBAAkB,EAAE,OAAO;iBAC5B;aACF;SACF,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAiB;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,aAAa,CAAC,IAAU;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACd,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC7C,CAAC;IAED,eAAe,CAAC,KAAe;QAC7B,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QACpC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,WAAW,CAAC,QAAQ,CACvB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAChC,UAAU,CAAC,MAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAC1C,CACF,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC;QACF,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;;0EA9MU,aAAa;6FAAb,aAAa;;;;;;QCV1B,sEACE;QAAA,2EACA;QADmB,sLAAyB;QAA5C,4DACA;QAAA,4EAA4B;QAApB,qIAAS,aAAS,IAAC;QAAC,oEAAS;QAAA,4DAAS;QAC9C,sEACE;QAAA,8EACA;QAD4C,4IAAU,wCAAoC,IAAC;QAA3F,4DACA;QAAA,4EAA+B;QAAvB,qIAAS,gBAAY,IAAC;QAAC,wEAAa;QAAA,4DAAS;QACvD,4DAAM;QACN,gEAAI;QAAA,iEACJ;QAAA,+GACE;QAGJ,4DAAM;QAEN,0EACE;QAAA,kFAAsF;QACtF,mIACA;QACA,mIACwC;QAC1C,4DAAM;;QAnBe,0DAAyB;QAAzB,oFAAyB;QAOrC,2DAA0B;QAA1B,8EAA0B;QAOa,0DAAoB;QAApB,iFAAoB;QACvB,0DAAkB;QAAlB,gFAAkB;QAEjB,0DAAkB;QAAlB,gFAAkB;;6FDRnD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;0NAE+B,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;;;;;;;;;;;;;;AEX9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEiB;AACT;AACM;AAC8B;;AAM9E,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAFZ,CAAC,kEAAY,EAAE,sEAAiB,CAAC;mIAE/B,UAAU,mBAHN,6DAAa,EAAE,iGAAmB,aACvC,kEAAY,EAAE,sEAAiB;6FAE9B,UAAU;cAJtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,6DAAa,EAAE,iGAAmB,CAAC;gBAClD,OAAO,EAAE,CAAC,kEAAY,EAAE,sEAAiB,CAAC;aAC3C","file":"deck-deck-module.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Deck, YPDCardList } from 'src/app/shared/interfaces/ygoprodeck';\n\n@Component({\n  selector: 'app-active-deck',\n  templateUrl: './active-deck.component.html',\n  styleUrls: ['./active-deck.component.css'],\n})\nexport class ActiveDeckComponent implements OnInit {\n  @Input() deck: Deck;\n  @Output() cardHover = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  getMainCardsInfo(cards: YPDCardList[]) {\n    const qtdMonsters = cards.filter((card) => card.type.includes('Monster'))\n      .length;\n    const qtdSpell = cards.filter(\n      (card) => card.type.includes('Spell') || card.type.includes('Skill')\n    ).length;\n    const qtdTrap = cards.filter((card) => card.type.includes('Trap')).length;\n    return `${cards.length} [ Monstros: ${qtdMonsters}, Magia: ${qtdSpell}, Armadilha: ${qtdTrap} ]`;\n  }\n\n  getExtraCardsInfo(cards: YPDCardList[]) {\n    const qtdFusion = cards.filter((card) => card.type.includes('Fusion'))\n      .length;\n    const qtdXYZ = cards.filter(\n      (card) => card.type.includes('Spell') || card.type.includes('XYZ')\n    ).length;\n    const qtdSynchro = cards.filter((card) => card.type.includes('Synchro'))\n      .length;\n    const qtdLink = cards.filter((card) => card.type.includes('Link')).length;\n    return `${cards.length} [ Fus√£o: ${qtdFusion}, XYZ: ${qtdXYZ}, Sincro: ${qtdSynchro}, Link: ${qtdLink} ]`;\n  }\n}\n","<div class=\"deck-container\">\n  <section class=\"deck-section\">\n    <div class=\"deck-header\">\n      <span>Main</span>\n      <span>{{ getMainCardsInfo(deck.main) }}</span>\n    </div>\n    <div class=\"deck-cards\">\n      <img *ngFor=\"let card of deck.main\" [src]=\"card.card_images[0].image_url_small\" alt=\"\"\n        (mouseenter)=\"cardHover.emit(card)\">\n    </div>\n  </section>\n  <section class=\"deck-section\">\n    <div class=\"deck-header\">\n      <span>Extra</span>\n      <span>{{ getExtraCardsInfo(deck.extra) }}</span>\n    </div>\n    <div class=\"deck-cards\">\n      <img *ngFor=\"let card of deck.extra\" [src]=\"card.card_images[0].image_url_small\" alt=\"\"\n        (mouseenter)=\"cardHover.emit(card)\">\n    </div>\n  </section>\n  <section class=\"deck-section\">\n    <div class=\"deck-header\">\n      <span>Apoio</span>\n      <span>{{ getMainCardsInfo(deck.side) }}</span>\n    </div>\n    <div class=\"deck-cards\">\n      <img *ngFor=\"let card of deck.side\" [src]=\"card.card_images[0].image_url_small\" alt=\"\"\n        (mouseenter)=\"cardHover.emit(card)\">\n    </div>\n  </section>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeckComponent } from './deck.component';\n\nconst routes: Routes = [{ path: '', component: DeckComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DeckRoutingModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { YgoprodeckService } from '../shared/services/ygoprodeck.service';\nimport { Deck, YPDCardList } from '../shared/interfaces/ygoprodeck';\nimport { DeckService } from '../shared/services/deck.service';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './deck.component.html',\n  styleUrls: ['./deck.component.css'],\n})\nexport class DeckComponent implements OnInit {\n  @ViewChild('inputImportDeck') inputImportDeck: ElementRef;\n  modalSearch: boolean = false;\n  decks: Deck[] = [];\n  activeDeck: Deck;\n  newDeckName: string = '';\n  cardPreview: YPDCardList;\n\n  constructor(\n    private ygoprodeckService: YgoprodeckService,\n    private deckService: DeckService\n  ) {}\n\n  ngOnInit(): void {\n    const mock = [\n      '#created by pedroatem',\n      '#main',\n      '46986414',\n      '46986415',\n      '46986416',\n      '40737112',\n      '71703785',\n      '71703785',\n      '71703785',\n      '35191415',\n      '35191415',\n      '35191415',\n      '30603688',\n      '38033125',\n      '7084129',\n      '7084129',\n      '71696014',\n      '71696014',\n      '1784686',\n      '2314238',\n      '12580477',\n      '49702428',\n      '55144522',\n      '75500286',\n      '82404868',\n      '82404868',\n      '83764719',\n      '98645731',\n      '111280',\n      '23020408',\n      '41735184',\n      '59514116',\n      '69542930',\n      '73616671',\n      '75190122',\n      '47222536',\n      '47222536',\n      '68462976',\n      '7922915',\n      '7922915',\n      '9287078',\n      '9287078',\n      '16964437',\n      '32754886',\n      '44095762',\n      '62279055',\n      '81210420',\n      '48680970',\n      '48680970',\n      '48680970',\n      '54175023',\n      '78625592',\n      '86509711',\n      '89448140',\n      '#extra',\n      '41721210',\n      '75380687',\n      '98502114',\n      '50237654',\n      '73452089',\n      '43892408',\n      '39030163',\n      '96471335',\n      '85551711',\n      '!side',\n      '38033121',\n      '38033123',\n      '82627406',\n      '7198399',\n      '56132807',\n      '34318086',\n      '20747792',\n      '97631303',\n      '49941059',\n      '47222536',\n      '7922915',\n      '',\n    ];\n    this.decks.push(this.deckService.ydk2Deck('Dark Magician', mock));\n    this.activeDeck = this.decks[0];\n    this.cardPreview = {\n      id: 97631303,\n      name: 'Almas dos Magos',\n      type: 'Effect Monster',\n      desc:\n        'Voc√™ pode enviar at√© 2 Magias/Armadilhas da sua m√£o e/ou do campo para o Cemit√©rio; compre esse n√∫mero de cards. Se este card estiver na sua m√£o: voc√™ pode enviar 1 monstro Mago de N√≠vel 6 ou mais do seu Deck para o Cemit√©rio e, depois, ative 1 desses efeitos;\\r\\n‚óè Invoque este card por Invoca√ß√£o-Especial.\\r\\n‚óè Envie este card para o Cemit√©rio e, depois, voc√™ pode Invocar por Invoca√ß√£o-Especial 1 \"Mago Negro\" ou 1 \"Pequena Maga Negra\" do seu Cemit√©rio.\\r\\nVoc√™ s√≥ pode usar cada efeito de \"Almas dos Magos\" uma vez por turno.\\n',\n      atk: 0,\n      def: 0,\n      level: 1,\n      scale: 0,\n      race: 'Spellcaster',\n      attribute: 'DARK',\n      name_en: \"Magicians' Souls\",\n      archetype: 'Dark Magician',\n      card_sets: [\n        {\n          set_name: 'Legendary Duelists: Magical Hero',\n          set_code: 'LED6-EN002',\n          set_rarity: 'Ultra Rare',\n          set_rarity_code: '(UR)',\n          set_price: '93.52',\n        },\n      ],\n      card_images: [\n        {\n          id: 97631303,\n          image_url:\n            'https://storage.googleapis.com/ygoprodeck.com/pics/97631303.jpg',\n          image_url_small:\n            'https://storage.googleapis.com/ygoprodeck.com/pics_small/97631303.jpg',\n        },\n        {\n          id: 97631303,\n          image_url:\n            'https://storage.googleapis.com/ygoprodeck.com/pics/97631303.jpg',\n          image_url_small:\n            'https://storage.googleapis.com/ygoprodeck.com/pics_small/97631303.jpg',\n        },\n        {\n          id: 97631303,\n          image_url:\n            'https://storage.googleapis.com/ygoprodeck.com/pics/97631303.jpg',\n          image_url_small:\n            'https://storage.googleapis.com/ygoprodeck.com/pics_small/97631303.jpg',\n        },\n        {\n          id: 97631303,\n          image_url:\n            'https://storage.googleapis.com/ygoprodeck.com/pics/97631303.jpg',\n          image_url_small:\n            'https://storage.googleapis.com/ygoprodeck.com/pics_small/97631303.jpg',\n        },\n        {\n          id: 97631303,\n          image_url:\n            'https://storage.googleapis.com/ygoprodeck.com/pics/97631303.jpg',\n          image_url_small:\n            'https://storage.googleapis.com/ygoprodeck.com/pics_small/97631303.jpg',\n        },\n      ],\n      card_prices: [\n        {\n          cardmarket_price: '56.62',\n          tcgplayer_price: '89.72',\n          ebay_price: '99.99',\n          amazon_price: '129.59',\n          coolstuffinc_price: '89.99',\n        },\n      ],\n    };\n  }\n\n  modalCardSelect(card: YPDCardList) {\n    console.log(card);\n  }\n\n  openModal() {\n    this.modalSearch = true;\n  }\n\n  setActiveDeck(deck: Deck) {\n    this.activeDeck = deck;\n  }\n\n  addDeck() {\n    this.decks.push({\n      name: this.newDeckName,\n      createdBy: '',\n      main: [],\n      extra: [],\n      side: [],\n    });\n    this.newDeckName = '';\n  }\n\n  importDeck() {\n    this.inputImportDeck.nativeElement.click();\n  }\n\n  handleInputDeck(files: FileList) {\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      this.decks.push(\n        this.deckService.ydk2Deck(\n          files[0].name.replace('.ydk', ''),\n          (fileReader.result as String).split('\\n')\n        )\n      );\n      this.activeDeck = this.decks[0];\n    };\n    fileReader.readAsText(files[0]);\n  }\n}\n","<div>\n  <input type=\"text\" [(ngModel)]=\"newDeckName\" placeholder=\"Nome do novo deck\">\n  <button (click)=\"addDeck()\">Novo Deck</button>\n  <div>\n    <input type=\"file\" name=\"\" #inputImportDeck (change)=\"handleInputDeck($event.target.files)\" style=\" display: none;\">\n    <button (click)=\"importDeck()\">Importar Deck</button>\n  </div>\n  <br><br>\n  <label *ngFor=\"let deck of decks\" for=\"{{ deck.name }}\">\n    <input type=\"radio\" name=\"deck-radio\" id=\"{{ deck.name }}\" (change)=\"setActiveDeck(deck)\">\n    {{ deck.name }}\n  </label>\n</div>\n\n<div class=\"active-deck\">\n  <app-card-preview class=\"active-deck-preview\" [card]=\"cardPreview\"></app-card-preview>\n  <app-active-deck class=\"active-deck-cards\" *ngIf=\"activeDeck\" (cardHover)=\"cardPreview = $event\" [deck]=\"activeDeck\">\n  </app-active-deck>\n  <app-card-search class=\"active-deck-search\" *ngIf=\"activeDeck\" (cardHover)=\"cardPreview = $event\"\n    (cardClick)=\"modalCardSelect($event)\"></app-card-search>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { DeckRoutingModule } from './deck-routing.module';\nimport { DeckComponent } from './deck.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ActiveDeckComponent } from './components/active-deck/active-deck.component';\n\n@NgModule({\n  declarations: [DeckComponent, ActiveDeckComponent],\n  imports: [SharedModule, DeckRoutingModule],\n})\nexport class DeckModule {}\n"],"sourceRoot":"webpack:///"}